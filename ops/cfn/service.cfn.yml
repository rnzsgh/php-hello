---
AWSTemplateFormatVersion: '2010-09-09'

# Any code, applications, scripts, templates, proofs of concept,
# documentation and other items are provided for illustration purposes only.
# # Copyright 2017 Amazon Web Services
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Parameters:

  Tag:
    Type: String

  TaskName:
    Type: String

  DesiredCount:
    Type: Number
    Default: 0

  LogGroup:
    Type: String

  LoadBalancerListenerArn:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "ALB Listener ARN"

  EcsClusterName:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "ECS cluster name"

  CiRepositoryName:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "CI/CD repository name"

  VpcId:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "VPC stack name"

  TargetGroupArn:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "Target group arn"

  TaskRoleArn:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "Task role arn"

  DeploymentPipelineStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "Deployment pipeline stack name"

  SystemKinesisStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "System kinesis stack name"

  TaskRoleStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    Description: "Task role stack name"

Resources:

  Service:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref EcsClusterName
      Role:
        Fn::ImportValue: !Sub "${TaskRoleStackName}-ecs-service-role"
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref TaskName
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup
    DependsOn:
      - ListenerRule
      - TaskDefinition

  ListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      ListenerArn: !Ref LoadBalancerListenerArn
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
    DependsOn:
      - TargetGroup

  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      VpcId: !Ref VpcId
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  TaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: !Sub "${AWS::StackName}-${TaskName}"
      TaskRoleArn: !Ref TaskRoleArn
      ContainerDefinitions:
        - Name: !Ref TaskName
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${CiRepositoryName}:${Tag}"
          EntryPoint:
            - /usr/sbin/apache2
            - -D
            - FOREGROUND
          Essential: true
          Memory: 128
          MountPoints:
            - SourceVolume: my-vol
              ContainerPath: /var/www/my-vol
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: Tag
              Value: !Ref Tag
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-region: !Sub "${AWS::Region}"
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref Tag
        - Name: busybox
          Image: busybox
          EntryPoint:
            - sh
            - -c
          Essential: false
          Memory: 128
          VolumesFrom:
            - SourceContainer: !Ref TaskName
          Command:
            - /bin/sh -c "while true; do /bin/date > /var/www/my-vol/date; sleep 1; done"
      Volumes:
        - Name: my-vol

  EcsContainerDiedEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: !Sub "EcsContainerDiedEventRule-${AWS::StackName}"
      EventPattern:
        source:
          - "aws.ecs"
        detail-type:
          - "ECS Task State Change"
        detail:
          stoppedReason:
            - "Essential container in task exited"
          lastStatus:
            - "STOPPED"
          desiredStatus:
            - "STOPPED"
          taskDefinitionArn:
            - !Ref TaskDefinition
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::ImportValue: !Sub "${DeploymentPipelineStackName}-ecs-container-died-topic-arn"
          Id: !Sub "ecs-container-died-target-${AWS::StackName}"
    DependsOn:
      - TaskDefinition

Outputs:

  ServiceArn:
    Value: !Ref Service
    Export:
      Name: !Sub "${AWS::StackName}-service-arn"

  ServiceName:
    Value: !GetAtt Service.Name
    Export:
      Name: !Sub "${AWS::StackName}-service-name"

  TaskDefinitionArn:
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub "${AWS::StackName}-task-definition-arn"

  TargetGroupArn:
    Value: !Ref TargetGroup
    Export:
      Name: !Sub "${AWS::StackName}-target-group-arn"

  TargetGroupFullName:
    Value: !GetAtt TargetGroup.TargetGroupFullName
    Export:
      Name: !Sub "${AWS::StackName}-target-group-full-name"

